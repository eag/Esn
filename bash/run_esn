#!/bin/bash
# 
#Copyright (C) 2022 Erin Gibson
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
#_______________________________________________________________________________
#
# SETUP
#_______________________________________________________________________________

if [[ $# -ne 2 ]]; then
  echo "  Usage: $(basename $0) <subj_id> <k>"
  exit 1;
fi

subj_id=$1

data_dir="/Users/erin/erindocs/projects/eeg/esn/data"
train_data_dir="${data_dir}/train/s${subj_id}"
test_data_dir="${data_dir}/test/s${subj_id}"
train_fn=${train_data_dir}/esn_training.bin
validation_fn=${train_data_dir}/esn_validation.bin

washout=200
num_prediction_steps=$2
connection_sparsity=0.2
network_size=100
num_random_initializations=1

#_______________________________________________________________________________
#
# RUN
#_______________________________________________________________________________

# Find optimal parameters with validation data
if [[ ! -f ${train_data_dir}/esn_parameters.txt ]]; then
   /Users/erin/erindocs/projects/bin/EsnMain \
      -l 0.1 -l 0.2 -l 0.3 -l 0.4 -l 0.5 -l 0.6 -l 0.8 -l 0.9 -l 0.95 \
      -s 0.1 -s 0.2 -s 0.3 -s 0.4 -s 0.5 -s 0.6 -s 0.8 -s 0.9 -s 0.95 \
      -i 0.2  \
      -r 1e-8 -r 1e-10 -r 0 \
      -w ${washout} \
      -k ${num_prediction_steps} \
      -c ${connection_sparsity} \
      -n ${network_size} \
      -x ${num_random_initializations} \
      -t ${train_fn} \
      -v ${validation_fn} \
      -d ${train_data_dir}
fi

# Predict using optimal parameters
leaking_rate=$(cat ${train_data_dir}/esn_parameters.txt | cut -d',' -f1)
spectral_radius=$(cat ${train_data_dir}/esn_parameters.txt | cut -d',' -f2)
input_scaling=$(cat ${train_data_dir}/esn_parameters.txt | cut -d',' -f3)
regularization=$(cat ${train_data_dir}/esn_parameters.txt | cut -d',' -f4)

test_fns=$(ls ${test_data_dir}/esn_test_[0-9].bin ${test_data_dir}/esn_test_[0-9][0-9].bin )
for test_fn in ${test_fns}; do

   pred_fn=$(echo ${test_fn} | sed "s/\.bin//")
   pred_fn+="_prediction.bin"

   # Predict test data
   /Users/erin/erindocs/projects/bin/EsnMain \
      -l ${leaking_rate} \
      -s ${spectral_radius} \
      -i ${input_scaling} \
      -r ${regularization} \
      -w ${washout} \
      -k ${num_prediction_steps} \
      -c ${connection_sparsity} \
      -n $((${network_size}*4)) \
      -x ${num_random_initializations} \
      -t ${train_fn} \
      -p ${test_fn} \
      -d ${test_data_dir}

   mv ${test_data_dir}/esn_prediction.bin ${pred_fn}
   rm ${test_data_dir}/esn_parameters.txt

 done

#_______________________________________________________________________________